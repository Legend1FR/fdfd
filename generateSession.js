const { TelegramClient } = require("telegram");
const { StringSession } = require("telegram/sessions");
const input = require("input"); // ููุชุจุฉ ูุฅุฏุฎุงู ุงูุจูุงูุงุช ูู ุงููุณุชุฎุฏู
const fs = require("fs"); // ูุฅุฏุงุฑุฉ ุงููููุงุช

const apiId = 23299626; // ุงุณุชุจุฏู ุจู API ID ุงูุฎุงุต ุจู
const apiHash = "89de50a19288ec535e8b008ae2ff268d"; // ุงุณุชุจุฏู ุจู API Hash ุงูุฎุงุต ุจู
const stringSession = new StringSession(""); // ุณูุณูุฉ ุฌูุณุฉ ูุงุฑุบุฉ

const client = new TelegramClient(stringSession, apiId, apiHash, {
    connectionRetries: 5,
});

(async () => {
    console.log("๐ ุจุฏุก ุฅูุดุงุก ุฌูุณุฉ ุชูููุฌุฑุงู...");
    
    try {
        await client.start({
            phoneNumber: async () => await input.text("ุฃุฏุฎู ุฑูู ูุงุชูู (ูุน ุฑูุฒ ุงูุฏููุฉุ ูุซู: +967xxxxxxxxx): "),
            password: async () => await input.text("ุฃุฏุฎู ูููุฉ ุงููุฑูุฑ 2FA (ุงุชุฑููุง ูุงุฑุบุฉ ุฅุฐุง ูู ุชูู ููุฌูุฏุฉ): "),
            phoneCode: async () => await input.text("ุฃุฏุฎู ุฑูุฒ ุงูุชุญูู ุงูุฐู ูุตูู: "),
            onError: (err) => console.log("โ ุฎุทุฃ:", err),
        });
        
        console.log("โ ุชู ุชุณุฌูู ุงูุฏุฎูู ุจูุฌุงุญ!");
        const sessionString = client.session.save();
        
        // ุญูุธ ุณูุณูุฉ ุงูุฌูุณุฉ ูู ููู session.txt
        fs.writeFileSync("session.txt", sessionString);
        console.log("๐พ ุชู ุญูุธ ุงูุฌูุณุฉ ูู session.txt");
        console.log("๐ฑ ุณูุณูุฉ ุงูุฌูุณุฉ:", sessionString);
        
        // ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฃููุฏ
        await client.sendMessage("me", { message: "โ ุชู ุฅูุดุงุก ุงูุฌูุณุฉ ุจูุฌุงุญ! ููููู ุงูุขู ุฑูุน ุงููููุงุช ุฅูู Render." });
        console.log("๐ค ุชู ุฅุฑุณุงู ุฑุณุงูุฉ ุชุฃููุฏ ุฅูู ุญุณุงุจู");
        console.log("๏ฟฝ ููููู ุงูุขู ุฑูุน ุงููููุงุช ุฅูู Render!");
        
    } catch (error) {
        console.error("โ ุฎุทุฃ ูู ุฅูุดุงุก ุงูุฌูุณุฉ:", error.message);
        
        if (error.errorMessage === 'PHONE_NUMBER_BANNED') {
            console.error("โ ุฑูู ุงููุงุชู ูุญุธูุฑ ูู ุชูููุฌุฑุงู.");
            console.error("๐ก ุงูุญููู ุงูููุชุฑุญุฉ:");
            console.error("   1. ุงุณุชุฎุฏู ุฑูู ูุงุชู ุขุฎุฑ");
            console.error("   2. ุชูุงุตู ูุน ุฏุนู ุชูููุฌุฑุงู");
            console.error("   3. ุงูุชุธุฑ ูุชุฑุฉ ูุจู ุงููุญุงููุฉ ูุฑุฉ ุฃุฎุฑู");
        } else if (error.errorMessage === 'PHONE_CODE_INVALID') {
            console.error("โ ุฑูุฒ ุงูุชุญูู ุบูุฑ ุตุญูุญ. ุญุงูู ูุฑุฉ ุฃุฎุฑู.");
        } else if (error.errorMessage === 'PHONE_NUMBER_INVALID') {
            console.error("โ ุฑูู ุงููุงุชู ุบูุฑ ุตุญูุญ. ุชุฃูุฏ ูู ุฅุฏุฎุงู ุฑูู ุตุญูุญ ูุน ุฑูุฒ ุงูุฏููุฉ.");
        }
    } finally {
        await client.disconnect();
    }
})();
